name: Manifest validation test

on:
  pull_request:
    branches:
      - master

jobs:
  commit-judgment:
    name: "check job run"
    runs-on: ubuntu-latest
    if: "! contains(github.head_ref, 'release/machine/')"
    outputs:
      commit-environment-name: "${{steps.check.outputs.commit-environment-name}}"
      commit-dir-name: "${{steps.check.outputs.commit-dir-name}}"
      commit-judgment-name: "${{steps.check.outputs.commit-judgment-name}}"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  
      - name: check
        id: check
        uses: ./.github/actions/update-confirm
  manifest-lint:
    name: "Manifest lint"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [rc, stg, prd]
    needs: commit-judgment
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/kustomize-setup
      - name: kubeval install
        run: |
          wget https://github.com/instrumenta/kubeval/releases/latest/download/kubeval-linux-amd64.tar.gz
          tar xf kubeval-linux-amd64.tar.gz
          sudo mv ./kubeval /usr/local/bin/kubeval
      - name: Validation the kustomize
        run: |
          echo "kustomize build result"
          kustomize build ./microservices/${{needs.commit-judgment.outputs.commit-dir-name}}/overlays/${{matrix.env}} 2>&1 > /dev/null
      - name: Validation the manifest with kubeval
        run: |
          kustomize build ./microservices/${{needs.commit-judgment.outputs.commit-dir-name}}/overlays/${{matrix.env}} | kubeval
  manifest-rc-k8s-api-test:
    name: "Manifest API test"
    runs-on: ubuntu-latest
    needs: [commit-judgment, manifest-lint]
    strategy:
      matrix:
        env: [rc, stg, prd]
    environment: ${{matrix.env}}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/kustomize-setup
      - uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT }}
      - run: |
          gcloud container clusters get-credentials "${{secrets.GKE_CLUSTER}}" --zone "${{secrets.GKE_ZONE}}"
      - name: validation
        id: validation
        run: |
          K8S_APPLY_MESSAGE=$(kustomize build ./microservices/${{needs.commit-judgment.outputs.commit-dir-name}}/overlays/${{matrix.env}}  | kubectl apply -f - --validate --dry-run=server 2>&1 > /dev/null)
          echo "${K8S_APPLY_MESSAGE}"
          echo "::set-output name=k8s-apply-message::$K8S_APPLY_MESSAGE"
      - name: Post comments
        if: always()
        env:
          GITHUB_TOKEN: ${{secrets.TOKEN}}
          URL: ${{github.event.pull_request.comments_url}}
        run: |
          if [ -n "${{steps.validation.outputs.k8s-apply-message}}" ]; then 
            TEST="API Test Error and Warning List¥nWarningは非推奨項目のためマージ可能ですが直すようにしてください。¥n${{steps.validation.outputs.k8s-apply-message}}"
            curl -X POST \
              -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H 'content-type: application/json' \
              -d "{\"body\": \" ${TEST}\"}" \
              ${URL}
          fi