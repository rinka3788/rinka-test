outputs:
  commit-judgment-count:
    description: "Determine if it is a manifest setting or a repository setting"
    value: ${{steps.check.outputs.commit-judgment-count}}
  commit-judgment-name:
    description: "Determine if it is a manifest setting or a repository setting"
    value: ${{steps.check.outputs.commit-judgment-name}}
  commit-dir-count:
    description: "Count of committed projects"
    value: ${{steps.check.outputs.commit-dir-count}}
  commit-dir-name:
    description: "committed microservices name"
    value: ${{steps.check.outputs.commit-dir-name}}
  commit-manifest-type-count:
    description: "Manifest type to update count"
    value: ${{steps.check.outputs.commit-manifest-type-count}}
  commit-manifest-type-name:
    description: "Manifest type name"
    value: ${{steps.check.outputs.commit-manifest-type-name}}
  commit-environment-count:
    description: "Count of environments to update"
    value: ${{steps.check.outputs.commit-environment-count}}
  commit-environment-name:
    description: "environments name"
    value: ${{steps.check.outputs.commit-environment-name}}
  before-sha:
    value: ${{steps.check.outputs.before-sha}}
  after-sha:
    value: ${{steps.check.outputs.after-sha}}
runs:
  using: "composite"
  steps:
    - id: check
      shell: bash
      run: |
        echo "${GITHUB_EVENT_PATH}"
        cat ${GITHUB_EVENT_PATH}
        BEFORE_SHA=$(jq -r '.pull_request.base.sha' $GITHUB_EVENT_PATH)
        if [ ${BEFORE_SHA} == "null" ]; then
          BEFORE_SHA=$(jq -r '.before' $GITHUB_EVENT_PATH)
        fi
        echo "BEFORE_SHA: ${BEFORE_SHA}"
        AFTER_SHA=$(jq -r '.pull_request.head.sha' $GITHUB_EVENT_PATH)
        if [ ${AFTER_SHA} == "null" ]; then
          AFTER_SHA=$(jq -r '.after' $GITHUB_EVENT_PATH)
        fi
        echo "AFTER_SHA: ${AFTER_SHA}"
        echo "::set-output name=before-sha::$BEFORE_SHA"
        echo "::set-output name=after-sha::$AFTER_SHA"
        # Judgment of commit to microservices
        COMMIT_JUDGMENT=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $1}' | uniq | wc -l)
        COMMIT_JUDGMENT_NAME=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $1}' | uniq)
        echo "COMMIT_JUDGMENT: ${COMMIT_JUDGMENT}"
        echo "COMMIT_JUDGMENT_NAME: ${COMMIT_JUDGMENT_NAME}"
        echo "::set-output name=commit-judgment-count::$COMMIT_JUDGMENT"
        echo "::set-output name=commit-judgment-name::$COMMIT_JUDGMENT_NAME"
        # Number of microservice
        COMMIT_DIR_COUNT=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $2}' | uniq | wc -l)
        COMMIT_DIR_NAME=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $2}' | uniq)
        echo "COMMIT_DIR_COUNT: ${COMMIT_DIR_COUNT}"
        echo "COMMIT_DIR_NAME: ${COMMIT_DIR_NAME}"
        echo "::set-output name=commit-dir-count::$COMMIT_DIR_COUNT"
        echo "::set-output name=commit-dir-name::$COMMIT_DIR_NAME"
        # base or overlays
        COMMIT_MANIFEST_TYPE_COUNT=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $3}' | uniq | wc -l)
        COMMIT_MANIFEST_TYPE_NAME=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $3}' | uniq )
        echo "COMMIT_MANIFEST_TYPE_COUNT: ${COMMIT_MANIFEST_TYPE_COUNT}"
        echo "COMMIT_MANIFEST_TYPE_NAME: ${COMMIT_MANIFEST_TYPE_NAME}"
        echo "::set-output name=commit-manifest-type-count::$COMMIT_MANIFEST_TYPE_COUNT"
        echo "::set-output name=commit-manifest-type-name::$COMMIT_MANIFEST_TYPE_NAME"
        # Number of environments
        COMMIT_ENVIRONMENT_COUNT=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $4}' | uniq | wc -l)
        COMMIT_ENVIRONMENT_NAME=$(git diff --name-only ${BEFORE_SHA} ${AFTER_SHA} | awk -F/ '{print $4}' | uniq)
        echo "COMMIT_ENVIRONMENT_COUNT: ${COMMIT_ENVIRONMENT_COUNT}"
        echo "COMMIT_ENVIRONMENT_NAME: ${COMMIT_ENVIRONMENT_NAME}"
        echo "::set-output name=commit-environment-count::$COMMIT_ENVIRONMENT_COUNT"
        echo "::set-output name=commit-environment-name::$COMMIT_ENVIRONMENT_NAME"

